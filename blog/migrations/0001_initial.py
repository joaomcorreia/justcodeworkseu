# Generated by Django 5.0.7 on 2025-10-07 03:44

import ckeditor.fields
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('name_en', models.CharField(blank=True, max_length=100)),
                ('name_nl', models.CharField(blank=True, max_length=100)),
                ('name_de', models.CharField(blank=True, max_length=100)),
                ('name_fr', models.CharField(blank=True, max_length=100)),
                ('name_es', models.CharField(blank=True, max_length=100)),
                ('name_pt', models.CharField(blank=True, max_length=100)),
                ('description_en', models.TextField(blank=True)),
                ('description_nl', models.TextField(blank=True)),
                ('description_de', models.TextField(blank=True)),
                ('description_fr', models.TextField(blank=True)),
                ('description_es', models.TextField(blank=True)),
                ('description_pt', models.TextField(blank=True)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('title_en', models.CharField(blank=True, max_length=200)),
                ('title_nl', models.CharField(blank=True, max_length=200)),
                ('title_de', models.CharField(blank=True, max_length=200)),
                ('title_fr', models.CharField(blank=True, max_length=200)),
                ('title_es', models.CharField(blank=True, max_length=200)),
                ('title_pt', models.CharField(blank=True, max_length=200)),
                ('excerpt', models.TextField(help_text='Brief summary', max_length=300)),
                ('excerpt_en', models.TextField(blank=True, max_length=300)),
                ('excerpt_nl', models.TextField(blank=True, max_length=300)),
                ('excerpt_de', models.TextField(blank=True, max_length=300)),
                ('excerpt_fr', models.TextField(blank=True, max_length=300)),
                ('excerpt_es', models.TextField(blank=True, max_length=300)),
                ('excerpt_pt', models.TextField(blank=True, max_length=300)),
                ('content', ckeditor.fields.RichTextField()),
                ('content_en', ckeditor.fields.RichTextField(blank=True)),
                ('content_nl', ckeditor.fields.RichTextField(blank=True)),
                ('content_de', ckeditor.fields.RichTextField(blank=True)),
                ('content_fr', ckeditor.fields.RichTextField(blank=True)),
                ('content_es', ckeditor.fields.RichTextField(blank=True)),
                ('content_pt', ckeditor.fields.RichTextField(blank=True)),
                ('content_type', models.CharField(choices=[('tutorial', 'Tutorial'), ('tip', 'Business Tip'), ('guide', 'How-to Guide'), ('news', 'News & Updates'), ('case_study', 'Case Study')], default='tutorial', max_length=20)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog/images/')),
                ('featured_image_alt', models.CharField(blank=True, max_length=200)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('meta_keywords', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('scheduled', 'Scheduled')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False, help_text='Show in featured section')),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='blog.category')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-publish_date', '-created_at'],
            },
        ),
    ]
